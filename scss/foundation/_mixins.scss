@use './variables' as *;

/* ==========================================================================================================
  Break Points
  =========================================================================================================== */
@mixin mq($breakpoint) {
  @media screen and (max-width: #{map-get($breakpoints, $breakpoint)}){
    @content;
  }
}

/* ==========================================================================================================
  Containerレイアウト
  =========================================================================================================== */
@mixin container($container-width: 80rem, $padding: 2rem, $sp-padding: 1rem) {
  margin-inline: auto;
  padding-inline: $padding;
  max-width: $container-width;
  @include mq(md) {
    padding-inline: $sp-padding;
  }
}

@mixin wrapper($container-width: 80rem, $padding: 2rem, $sp-padding: 1rem) {
  // margin-inline: auto;
  padding-inline: $padding;
  // max-width: $container-width;
  @include mq(md) {
    padding-inline: $sp-padding;
  }
}

/* ==========================================================================================================
  画面幅に合わせて拡大
  ========================================================================================================== */
@mixin expand() {
  margin-left: calc(50% - 50vw);
  width: 100vw;
}

/* ==========================================================================================================
  Gridレイアウト
  =========================================================================================================== */

/* Gap
   ---------------------------------------------------------------------------------------------------------- */
@mixin gap($px: 1) {
  $gap-rem: calc($px / 16);
  gap: $gap-rem + rem;
}

/* Gapをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// $i: 0;
// $class-count: 0;
// @while $i <= 10 {
//   $gap-rem: calc($i / 4);
//   .gap-#{$class-count} {
//     gap: $gap-rem + rem;
//   }
//   $i : $i + 0.5;
//   $class-count: $class-count + 2;
// }

/* Grid Columns
   ---------------------------------------------------------------------------------------------------------- */
@mixin grid-cols($cols: 1) {
  display: grid;
  @if $cols == none {
  grid-template-columns: none;
  }
  @else if $cols == subgrid {
  grid-template-columns: subgrid;
  }
  @else {
    grid-template-columns: repeat($cols, minmax(0, 1fr));
  }
}

/* Grid Columnsをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 12 {
//   .grid-cols-#{$i} {
//     grid-template-columns: repeat($i, minmax(0, 1fr));
//   }
// }

/* Grid Columns Span
--------------------------------------------- */
@mixin col-span($span: 1) {
  @if $span == auto {
  grid-column: auto;
  }
  @else if $span == full {
  grid-column: 1 / -1;
  }
  @else {
    grid-column: span $span / span $span;
  }
}

/* col-spanをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 12 {
//   .col-span-#{$i} {
//     grid-column: span $i / span $i;
//   }
// }

/* ------------ col-start --------------- */
@mixin col-start($start: 1) {
  @if $start == auto {
  grid-column-start: auto;
  }
  @else {
    grid-column-start: $start;
  }
}

/* col-startをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 13 {
//   .col-start-#{$i} {
//     grid-column-start: $i;
//   }
// }

/* ------------ col-end --------------- */
@mixin col-end($end: 1) {
  @if $end == auto {
  grid-column-end: auto;
  }
  @else {
    grid-column-end: $end;
  }
}

/* col-endをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 13 {
//   .col-end-#{$i} {
//     grid-column-end: $i;
//   }
// }

/* Grid rows
   ---------------------------------------------------------------------------------------------------------- */
@mixin grid-rows($rows: 1) {
  display: grid;
  @if $rows == none {
    grid-template-rows: none;
  }
  @else if $rows == subgrid {
    grid-template-rows: subgrid;
  }
  @else {
    grid-template-rows: repeat($rows, minmax(0, 1fr));
  }
}

/* Grid rowsをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 12 {
//   .grid-rows-#{$i} {
//     grid-template-rows: repeat($i, minmax(0, 1fr));
//   }
// }

/* Grid Rows Span
   ---------------------------------------------------------------------------------------------------------- */
@mixin row-span($span: 1) {
  @if $span == auto {
  grid-row: auto;
  }
  @else if $span == full {
  grid-row: 1 / -1;
  }
  @else {
    grid-row: span $span / span $span;
  }
}

/* row-spanをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 12 {
//   .row-span-#{$i} {
//     grid-row: span $i / span $i;
//   }
// }

/* ------------ row-start --------------- */
@mixin row-start($start: 1) {
  @if $start == auto {
  grid-row-start: auto;
  }
  @else {
    grid-row-start: $start;
  }
}

/* row-startをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 13 {
//   .row-start-#{$i} {
//     grid-row-start: $i;
//   }
// }

/* ------------ row-end --------------- */
@mixin row-end($end: 1) {
  @if $end == auto {
  grid-row-end: auto;
  }
  @else {
    grid-row-end: $end;
  }
}

/* row-endをループですべて作成する場合、下記を有効化 */
/* ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ */
// @for $i from 1 to 13 {
//   .row-end-#{$i} {
//     grid-row-end: $i;
//   }
// }

/* ==========================================================================================================
  hoverアクション
  =========================================================================================================== */
@mixin hover-pale() {
  transition-duration: $duration-time;
  &:hover {
    opacity: $opacity;
  }
}

@mixin hover-text-color($color: $main-color) {
  transition-duration: $duration-time;
  &:hover {
    color: $color;
  }
}

@mixin link-line-trans($opacity: $opacity, $border-coloe: $main-color, $after-text-color: $main-color) {
  // line-height: 1.6;
  display: inline-block;
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.20,1,.20,1);
  &::before,
  &::after{
    position: absolute;
    bottom: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 1px;
    content: "";
    background: $border-coloe;
    transform: translateX(-105%);
    transition: all 0.3s cubic-bezier(0.20,1,.20,1);
  }
  &:hover{
    color: $after-text-color;
    opacity: $opacity;
    &::before{
      transform: translateX(0);
      transition-delay: 0.2s;
    }
    &::after{
      transform: translateX(100%);
    }
  }
}

@mixin hover-text-decoration($text-color: none) {
  transition-duration: $duration-time;
  @if $text-color == none {
    &:hover {
      text-decoration: underline;
    }
  }
  @else {
    &:hover {
      color: $text-color;
      text-decoration: underline;
    }
  }
}

@mixin hover-move-top-left {
  transition-duration: $duration-time;
  &:hover {
    transform: translate(-5px, -5px);
  }
}

/* ==========================================================================================================
  Cardレイアウト
  =========================================================================================================== */
/* Card
   ---------------------------------------------------------------------------------------------------------- */
@mixin card() {
  overflow: hidden;
  // border-radius: $border-radius;
  // box-shadow: 0.125rem 0.125rem 0.25rem $shadow-color;
  background-color: white;
  padding: 3rem 0;

  &__img {
    position: relative;
    padding-top: 56.25%;
    overflow: hidden;
    img {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      // display: block;
      width: 100%;
      aspect-ratio: 16 / 9;
    }
  }

  &__body {
    padding-left: 1rem;
    padding-right: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  &__tag {
    margin-top: 2rem;
    display: block;
  }

  &__title {
    font-weight: bold;
    font-size: 1.125rem;
    margin-top: 1rem;
    // margin: 1rem 0;
  }

  &__text {
    text-align: left;
  }

  &__link {
    transition-duration: $duration-time;
    &:hover {
      opacity: $opacity;
      color: $main-color;
    }
  }

  &__btn {
    margin: 0 auto;
    width: 60%;
    margin-top: 2rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
    text-align: center;
    border: 1px solid $border-color;
    a {
      transition-duration: $duration-time;
      &:hover {
        color: $main-color;
      }
    }
  }
}

/* ==========================================================================================================
  Buttonレイアウト
  =========================================================================================================== */
/* Button
   ---------------------------------------------------------------------------------------------------------- */
@mixin button($border-radius: 999px,$border-color: $main-color, $bg-color: $main-color, $text-color: white, $hove-bg-color: #fff, $hove-text-color: $main-color) {
  display: inline-block;
  width: 50%;
  text-align: center;
  padding-block: 1rem ;
  border: 1px solid $border-color;
  border-radius: $border-radius;
  background-color: $bg-color;
  color: $text-color;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.3s cubic-bezier(0.20,1,.20,1);
  &:hover {
    background-color: $hove-bg-color;
    color: $hove-text-color;
  }
  @include mq(md) {
    width: 100%;
  }
}

@mixin push-btn($width: 100%, $height: 100%, $border-radius: $border-radius, $text-color: $text-color, $bg-color: $main-color, $shadow-color: $shadow-color, $duration-time: $duration-time) {
  color: $text-color;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  width: $width;
  height: $height;
  border-radius: $border-radius;
  text-align: center;
  background-color: $bg-color;
  box-shadow: 0px 10px $shadow-color;
  transition-duration: $duration-time;
  &:hover {
    transform: translateY(8px);
    box-shadow: 0px 2px $shadow-color;
  }
}

@mixin coloring-btn ($width: 100%, $height: 100%, $border-radius: $border-radius, $duration-time: $duration-time) {
  margin-inline: auto;
  color: $text-color;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: $width;
  height: $height;
  overflow: hidden;
  border-radius: $border-radius;
  text-align: center;
  background-color: #fff;
  border: 1px solid $main-color;
  position: relative;
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: $height;
    height: 100%;
    background-color: $main-color;
    border-radius: 9999px;
    transition-duration: $duration-time;
  }
  span {
    transition-duration: $duration-time;
    transition-delay: .1s;
    z-index: 2;
  }
  &:hover {
    span {
      color: #fff;
    }
    &::before {
      width: 100%;
    }
  }
}

/* ==========================================================================================================
  hoverアクション
  =========================================================================================================== */
@mixin link-line-trans($opacity: $opacity, $border-color: $main-color, $after-text-color: $main-color) {
  // line-height: 1.6;
  display: inline-block;
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.20,1,.20,1);
  &::before,
  &::after{
    position: absolute;
    bottom: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 1px;
    content: "";
    background: $border-color;
    transform: translateX(-105%);
    transition: all 0.3s cubic-bezier(0.20,1,.20,1);
  }
  &:hover{
    color: $after-text-color;
    opacity: $opacity;
    &::before{
      transform: translateX(0);
      transition-delay: 0.2s;
    }
    &::after{
      transform: translateX(100%);
    }
  }
}